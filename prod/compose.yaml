version: '3.8'
services:
  # 27017
  mongodb:
    image: mongo:latest
    container_name: mongo
    volumes:
      - mongo-data:/data/db
    networks:
      - mongo-network
    restart: unless-stopped

  # 5000
  backend:
    image: ghcr.io/${GITHUB_USERNAME}/multiservice-docker-backend:latest
    container_name: backend
    environment:
      - MONGO_URI=mongodb://mongodb:27017/tasks
      - PORT=5000
      - REDIS_URI=redis://redis:6379
    networks:
      - mongo-network
      - backend-network
    restart: unless-stopped

  # 3000
  frontend:
    image: ghcr.io/${GITHUB_USERNAME}/multiservice-docker-frontend:latest
    container_name: frontend
    environment:
      - BACKEND_API=http://localhost:3000/tasks
    networks:
      - backend-network
      - frontend-network
    restart: unless-stopped


  proxy:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "3000:80"
    restart: unless-stopped
    networks:
      - backend-network
      - frontend-network
      - monitor

  # 6379
  redis:
    image: redis:7
    container_name: redis
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - backend-network
    
    # 3000
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - monitor
    environment:
      - GF_SERVER_ROOT_URL=http://localhost:3000/grafana/
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
      - GF_SERVER_HTTP_PORT=4000
      - GF_LOG_LEVEL=debug
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_FEATURE_TOGGLES_ENABLE=alertingSimplifiedRouting,alertingQueryAndExpressionsStepMode
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy 
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh

  # 3100
  loki:
    image: grafana/loki:3.4
    command: -config.file=/etc/loki/local-config.yaml
    container_name: loki
    networks:
      - monitor
    volumes:
      - loki-data:/loki:rw
      - ./loki/loki-config.yaml:/etc/loki/local-config.yaml
    restart: unless-stopped


  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - ./promtail/promtail-config.yaml:/etc/promtail/promtail.yaml
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/promtail.yaml
    restart: unless-stopped
    networks:
      - monitor

volumes:
  mongo-data:
  redis-data:
  grafana-data:
  loki-data:

networks:
  mongo-network:
    driver: bridge
  backend-network:
    driver: bridge
  frontend-network:
    driver: bridge
  monitor:
    driver: bridge
